
@online{adegeoWindowsFormsNET,
  title = {Windows {{Forms}} for .{{NET}} 5 Documentation},
  author = {{adegeo}},
  url = {https://docs.microsoft.com/en-us/dotnet/desktop/winforms/},
  urldate = {2020-10-29},
  abstract = {Learn about using Windows Forms, an open-source, graphical user interface for Windows, on .NET 5.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\X3C3YS7C\\winforms.html},
  langid = {american}
}

@online{AngleSharpHome,
  title = {{{AngleSharp}} - {{Home}}},
  url = {https://anglesharp.github.io/},
  urldate = {2020-10-29},
  file = {C\:\\Users\\fried\\Zotero\\storage\\KLJVLA4D\\anglesharp.github.io.html}
}

@online{billwagnerDelegatesProgrammingGuide,
  title = {Delegates - {{C}}\# {{Programming Guide}}},
  author = {BillWagner},
  url = {https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/delegates/},
  urldate = {2020-10-29},
  abstract = {A delegate in C\# is a type that refers to methods with a parameter list and return type. Delegates are used to pass methods as arguments to other methods.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\SQWUEBII\\delegates.html},
  langid = {american}
}

@online{billwagnerSealedModifierReference,
  title = {Sealed Modifier - {{C}}\# {{Reference}}},
  author = {BillWagner},
  url = {https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/sealed},
  urldate = {2020-10-29},
  abstract = {sealed modifier - C\# Reference},
  file = {C\:\\Users\\fried\\Zotero\\storage\\V9NRHGNQ\\sealed.html},
  langid = {american}
}

@online{dotnet-botDataContractSerializerClassSystem,
  title = {{{DataContractSerializer Class}} ({{System}}.{{Runtime}}.{{Serialization}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.datacontractserializer},
  urldate = {2020-10-29},
  abstract = {Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\97ERHAFI\\system.runtime.serialization.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botICollectionInterfaceSystem,
  title = {{{ICollection}}{$<$}{{T}}{$>$} {{Interface}} ({{System}}.{{Collections}}.{{Generic}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.icollection-1},
  urldate = {2020-10-29},
  abstract = {Defines methods to manipulate generic collections.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\RMU6G9CX\\system.collections.generic.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botIEnumerableInterfaceSystem,
  title = {{{IEnumerable}}{$<$}{{T}}{$>$} {{Interface}} ({{System}}.{{Collections}}.{{Generic}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1},
  urldate = {2020-10-29},
  abstract = {Exposes the enumerator, which supports a simple iteration over a collection of a specified type.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\EXIEHZUS\\system.collections.generic.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botIListInterfaceSystem,
  title = {{{IList}}{$<$}{{T}}{$>$} {{Interface}} ({{System}}.{{Collections}}.{{Generic}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ilist-1},
  urldate = {2020-10-29},
  abstract = {Represents a collection of objects that can be individually accessed by index.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\WUBKLGMC\\system.collections.generic.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botLazyClassSystem,
  title = {Lazy{$<$}{{T}}{$>$} {{Class}} ({{System}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.lazy-1},
  urldate = {2020-10-29},
  abstract = {Provides support for lazy initialization.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\78SUKK57\\system.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botLazyThreadSafetyModeEnumSystem,
  title = {{{LazyThreadSafetyMode Enum}} ({{System}}.{{Threading}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.threading.lazythreadsafetymode},
  urldate = {2020-10-29},
  abstract = {Specifies how a Lazy{$<$}T{$>$} instance synchronizes access among multiple threads.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\5GHPZBIU\\system.threading.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botListClassSystem,
  title = {List{$<$}{{T}}{$>$} {{Class}} ({{System}}.{{Collections}}.{{Generic}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1},
  urldate = {2020-10-29},
  abstract = {Represents a strongly typed list of objects that can be accessed by index. Provides methods to search, sort, and manipulate lists.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\32UD5BQN\\system.collections.generic.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botTaskClassSystem,
  title = {Task{$<$}{{TResult}}{$>$} {{Class}} ({{System}}.{{Threading}}.{{Tasks}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task-1},
  urldate = {2020-10-29},
  abstract = {Represents an asynchronous operation that can return a value.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\JUHQBUIR\\system.threading.tasks.html},
  langid = {american},
  options = {useprefix=true}
}

@online{dotnet-botTaskClassSystema,
  title = {Task {{Class}} ({{System}}.{{Threading}}.{{Tasks}})},
  author = {dotnet- {bot}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task},
  urldate = {2020-10-29},
  abstract = {Represents an asynchronous operation.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\VL3QXYGE\\system.threading.tasks.html},
  langid = {american},
  options = {useprefix=true}
}

@online{ievangelistHowRaiseConsume,
  title = {How to: {{Raise}} and {{Consume Events}}},
  shorttitle = {How To},
  author = {IEvangelist},
  url = {https://docs.microsoft.com/en-us/dotnet/standard/events/how-to-raise-and-consume-events},
  urldate = {2020-10-29},
  abstract = {Raise \& consume events in .NET. See examples that use the EventHandler delegate, the EventHandler delegate, \& a custom delegate.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\EJHPHBVG\\how-to-raise-and-consume-events.html},
  langid = {american}
}

@online{karelzHttpClientClassSystem,
  title = {{{HttpClient Class}} ({{System}}.{{Net}}.{{Http}})},
  author = {{karelz}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient},
  urldate = {2020-10-29},
  abstract = {Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\C5HPAX2B\\system.net.http.html},
  langid = {american}
}

@online{karelzHttpResponseMessageClassSystem,
  title = {{{HttpResponseMessage Class}} ({{System}}.{{Net}}.{{Http}})},
  author = {{karelz}},
  url = {https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage},
  urldate = {2020-10-29},
  abstract = {Represents a HTTP response message including the status code and data.},
  file = {C\:\\Users\\fried\\Zotero\\storage\\B4CWAUVZ\\system.net.http.html},
  langid = {american}
}

@online{StdResultResult,
  title = {Std::Result::{{Result}} - {{Rust}}},
  url = {https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap},
  urldate = {2020-10-29},
  file = {C\:\\Users\\fried\\Zotero\\storage\\EBHVTF5K\\enum.Result.html}
}

@preamble{ "\ifdefined\DeclarePrefChars\DeclarePrefChars{'â€™-}\else\fi " }

